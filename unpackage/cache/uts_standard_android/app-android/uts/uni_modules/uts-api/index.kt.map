{"version":3,"sources":["uni_modules/uts-api/utssdk/app-android/index.uts","uni_modules/uts-api/utssdk/interface.uts","uni_modules/uts-api/utssdk/unierror.uts"],"sourcesContent":["import Intent from \"android.content.Intent\";\nimport Activity from \"android.app.Activity\";\nimport Bundle from \"android.os.Bundle\";\nimport LinearLayout from \"android.widget.LinearLayout\";\nimport TextView from \"android.widget.TextView\";\nimport Color from \"android.graphics.Color\";\nimport Gravity from \"android.view.Gravity\";\nimport ViewGroup from \"android.view.ViewGroup\";\nimport { MyApiOptions, MyApiResult, MyApi, MyApiSync } from '../interface.uts';\nimport { MyApiFailImpl } from '../unierror';\n\nclass HelloActivity extends Activity {\n  constructor() {\n    super();\n  }\n  override onCreate(savedInstanceState: Bundle | null): void {\n    super.onCreate(savedInstanceState);\n\n    // const layout = new LinearLayout(this);\n    // layout.setOrientation(LinearLayout.VERTICAL);\n    // layout.setGravity(Gravity.CENTER);\n    // layout.setBackgroundColor(Color.WHITE);\n\n    // const tv = new TextView(this);\n    // tv.setText(\"你好\");\n    // tv.setTextSize(40 as Float);\n    // tv.setTextColor(Color.BLACK);\n    // tv.setGravity(Gravity.CENTER);\n\n    // const params = new LinearLayout.LayoutParams(\n    //   ViewGroup.LayoutParams.WRAP_CONTENT,\n    //   ViewGroup.LayoutParams.WRAP_CONTENT\n    // );\n    // layout.addView(tv, params);\n\n    // this.setContentView(layout);\n  }\n}\n\nclass My implements Runnable {\n  override run() {\n    const activity = UTSAndroid.getUniActivity();\n    if (activity !== null) {\n      try {\n        const intent = new Intent(activity, HelloActivity().javaClass);\n        activity.startActivity(intent);\n      } catch (e) {\n        __f__('log','at uni_modules/uts-api/utssdk/app-android/index.uts:48','e', e);\n      }\n    }\n  }\n}\n\n// 异步方法：打开新Activity页面\nexport const myApi: MyApi = function (options: MyApiOptions) {\n\tconst activity = UTSAndroid.getUniActivity();\n\tif (activity !== null) {\n\t\tactivity.runOnUiThread(new My());\n\t}\n}","// 定义 API的参数类型，基本数据类型的参数无需定义，复杂类型参数建议使用自定义type\n/**\n * myApi 异步函数的参数，在type里定义函数需要的参数以及api成功、失败的相关回调函数。\n */\nexport type MyApiOptions = {\n  paramA : boolean\n  success ?: (res : MyApiResult) => void\n  fail ?: (res : MyApiFail) => void\n  complete ?: (res : any) => void\n}\n\n// 定义 API 的返回值类型, 基本数据类型的返回值无需特殊定义，复杂类型的参数建议使用自定义type\n/**\n * 函数返回结果\n * 可以是void, 基本数据类型，自定义type, 或者其他类型。\n * [可选实现]\n */\nexport type MyApiResult = {\n  fieldA : number,\n  fieldB : boolean,\n  fieldC : string\n}\n\n// 定义 API 对外暴露的错误码，为了更好语法提示和校验效果，建议将错误码用type 定义成联合类型。定义后，使用未指定的错误码将会被警告提示。\n// 建议定义的错误码遵循uni错误规范 [详见](https://uniapp.dcloud.net.cn/tutorial/err-spec.html#unierror)。\n/**\n * 错误码\n * 根据uni错误码规范要求，建议错误码以90开头，以下是错误码示例：\n * - 9010001 错误信息1\n * - 9010002 错误信息2\n */\nexport type MyApiErrorCode = 9010001 | 9010002;\n\n\n// 定义 API 的错误回调参数类型，这里定义成 interface 并继承 IUniError 是为了遵循统一的 Uni错误码规范。\n// 这里开发者只需要指定 errCode 的类型，以便获得更好的语法提和校验效果。\n/**\n * myApi 的错误回调参数\n */\nexport interface MyApiFail extends IUniError {\n  errCode : MyApiErrorCode\n};\n\n// 定义对外暴露的 API 类型，这里是个异步函数\n/* 异步函数定义 */\nexport type MyApi = (options : MyApiOptions) => void\n\n\n// 定义对外暴露的 API 类型，这里是个同步函数\n/* 同步函数定义 */\nexport type MyApiSync = (paramA : boolean) => MyApiResult\n\n","// 首先导入在 interface.uts 文件中定义的错误码类型，和错误的类型\nimport { MyApiErrorCode, MyApiFail } from \"./interface.uts\"\n\n/**\n * 定义错误主题，错误主题是Uni错误码的一个标准字段。\n * 注意：错误主题一般为插件名称，每个组件不同，需要使用时请更改。\n * [可选实现]\n */\nexport const UniErrorSubject = 'uts-api';\n\n\n/**\n * 错误信息，定义和错误码对应的语义化的提示信息，为了更好的获取，建议定义成Map类型。\n * @UniError\n * [可选实现]\n */\nexport const UTSApiUniErrors : Map<MyApiErrorCode, string> = new Map([\n  /**\n   * 错误码及对应的错误信息\n   */\n  [9010001, 'custom error mseeage1'],\n  [9010002, 'custom error mseeage2'],\n]);\n\n\n/**\n * 错误对象的具体使用实现，该实现会在 index.uts代码中创建使用。\n * 使用时只需要传入特定的错误码即可完成创建。\n */\nexport class MyApiFailImpl extends UniError implements MyApiFail {\n  override errCode: MyApiErrorCode\n  /**\n   * 错误对象构造函数\n   */\n  constructor(errCode : MyApiErrorCode) {\n    super();\n    this.errSubject = UniErrorSubject;\n    this.errCode = errCode;\n    this.errMsg = UTSApiUniErrors.get(errCode) ?? \"\";\n  }\n}\n\n"],"names":[],"mappings":";;AACA,OAAqB,oBAAsB,AAAC;AAD5C,OAAmB,sBAAwB,AAAC;AAE5C,OAAmB,iBAAmB,AAAC;;;;;;;;;;;;ACEZ,WAAf;IACV;qBAAS,OAAO,SAAA;IAChB,oBAAY,KAAM,gBAAgB,IAAI,UAAA;IACtC,iBAAS,KAAM,cAAc,IAAI,UAAA;IACjC,qBAAa,KAAM,GAAG,KAAK,IAAI,UAAA;;;;;;AASP,WAAd;IACV;qBAAS,MAAM,CAAC;IAChB;qBAAS,OAAO,SAAC;IACjB;qBAAS,MAAM,CAAA;;;;;;UAWL,iBAAiB,MAAO;UAQnB,YAAkB;iBACjC,SAAU;;UAKA,SAAS,SAAU,iBAAiB,IAAI;AC7B7C,IAAM,iBAAkB,oBAAoB,MAAM,IAAI,AAAI,IAAI;IAInE;AAAC,eAAO;QAAE;KAAwB;IAClC;AAAC,eAAO;QAAE;KAAwB;CACnC;AFXD,WAAM,gBAAsB;;;;IAC1B,gBACE,KAAK,GADP,CAEA;IACA,aAAS,SAAS,oBAAoB,OAAa,GAAG,IAAI,CAAA;QACxD,KAAK,CAAC,QAAQ,CAAC;IAoBjB;;AAGF,WAAM,KAAc;;;;IAClB,aAAS,MAAG;QACV,IAAM,WAAW,WAAW,cAAc;QAC1C,IAAI,YAAa,IAAI,EAAE;YACrB,IAAI;gBACF,IAAM,SAAS,AAAI,OAAO,UAAU,gBAAgB,SAAS;gBAC7D,SAAS,aAAa,CAAC;;aACvB,OAAO,cAAG;gBACV,YAAqE,KAAK;;;IAGhF;;AAIK,IAAM,eAAe,IAAU,qBAAqB,EAAA;IAC1D,IAAM,WAAW,WAAW,cAAc;IAC1C,IAAI,YAAa,IAAI,EAAE;QACtB,SAAS,aAAa,CAAC,AAAI;;AAE7B;ACvD2B;IACzB,SAAA,QAAS,OAAO,QAAA;IAChB,SAAA,SAAS,mBAA6B;IACtC,SAAA,MAAM,mBAA2B;IACjC,SAAA,UAAU,mBAAqB;;cAqCZ,SAAU,yBAAiB,IAAI;qEAvCtC,KAAM,cAAgB,IAAI;gCAA1B;;iBACH,KAAM,YAAc,IAAI;6BAAxB;;qBACI,KAAM,GAAG,GAAK,IAAI;iCAAlB"}